***************
*** 27,33 ****
  #define ETH_P_IP       0x0800          /* Internet Protocol packet     */
  #define ICMP_DEST_UNREACH  3
  #define IPPORT_TFTP 69
  
  struct iphdr {
  	unsigned int ihl:4;
  	unsigned int version:4;
--- 27,56 ----
  #define ETH_P_IP       0x0800          /* Internet Protocol packet     */
  #define ICMP_DEST_UNREACH  3
  #define IPPORT_TFTP 69
+ typedef unsigned char u_int8_t;
+ typedef unsigned short u_int16_t;
+ typedef unsigned int u_int32_t;
  
+ struct tcphdr {
+ 	uint16_t source;
+ 	uint16_t dest;
+ 	uint32_t seq;
+ 	uint32_t ack_seq;
+ 	uint16_t res1:4,
+ 		 doff:4,
+ 		 fin:1,
+ 		 syn:1,
+ 		 rst:1,
+ 		 psh:1,
+ 		 ack:1,
+ 		 urg:1,
+ 		 ece:1,
+ 		 cwr:1;
+ 	uint16_t window;
+ 	uint16_t check;
+ 	uint16_t urg_ptr;
+ };
+ 
  struct iphdr {
  	unsigned int ihl:4;
  	unsigned int version:4;
***************
*** 49,52 ****
  	u_int16_t check;
  };
  
  #endif /* __MISSING_OSX_H__ */
--- 72,99 ----
  	u_int16_t check;
  };
  
+ struct ether_header {
+ 	u_int8_t  ether_dhost[ETH_ALEN];	/* destination eth addr	*/
+ 	u_int8_t  ether_shost[ETH_ALEN];	/* source ether addr	*/
+ 	u_int16_t ether_type;		        /* packet type ID field	*/
+ };
+ 
+ struct arphdr {
+ 	unsigned short	ar_hrd;		/* format of hardware address	*/
+ 	unsigned short	ar_pro;		/* format of protocol address	*/
+ 	unsigned char	ar_hln;		/* length of hardware address	*/
+ 	unsigned char	ar_pln;		/* length of protocol address	*/
+ 	unsigned short	ar_op;		/* ARP opcode (command)		*/
+ 
+ };
+ 
+ struct ether_arp {
+ 	struct  arphdr ea_hdr;          /* fixed-size header */
+ 	u_int8_t arp_sha[ETH_ALEN];     /* sender hardware address */
+ 	u_int8_t arp_spa[4];            /* sender protocol address */
+ 	u_int8_t arp_tha[ETH_ALEN];     /* target hardware address */
+ 	u_int8_t arp_tpa[4];            /* target protocol address */
+ };
+ 
+ 
  #endif /* __MISSING_OSX_H__ */
